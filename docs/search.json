[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Diseños experimentales y cuasiexperimentales",
    "section": "",
    "text": "Este libro surge con la intención de acompañar a los estudiantes de la materia Diseño experimentales y cuasiexperimentales correspondiente a la carrera de Licenciatura en Ciencias del Comportamiento de la Universidad de San Andrés (Victoria, Argentina). Sin embargo, este libro no contiene todo los materiales de la materia, sino más bien es una guía que nos permite comprender conceptos básicos e identificar lo importante en cada tema. De forma complementaria, en cada capítulo se brindará una lista de bibliografía recomendada.\n\n\nEl objetivo de este libro es acercar a los lectores y lectoras los conceptos básicos del diseño experimental y cuasiexperimental para que de esta manera sean capaces de diseñar sus propios experimentos para expresar y verificar efectivamente hipótesis científicas. Asimismo se busca generar intuiciones que les permitan evaluar diseños experimentales con los que se puedan encontrar tanto en la literatura científica como en cualquier dato obtenido experimentalmente que se les presente al momento de tomar una decisión.\nSe espera que los lectores y lectoras sean capaces de comunicar los diseños experimentales, sus resultados y las implicancias de los mismos de manera clara, concisa y “apta para todo público”. Asímismo, un concepto transversal es que no siempre es posible implementar un diseño experimental “ideal” (si este existiera) y que tomar decisiones informadas sobre los mismos (modelos estadísticos, métricas, diseños, etc.) es una parte importante de nuestra labor como generadores de evidencia o tomadores de decisión basada en evidencia.\n\n\n\n\n\n\nSIGA SIGA…\n\n\n\nSi bien los ejemplos que se presentan en el libro están orientados a las ciencias del comportamiento, su contenido puede ser adaptado a cualquier ciencia experimental, desde la biología hasta la economía.\n\n\n\n\n\nEl libro se organiza en cuatro grandes secciones: Probabilidad y estadística, diseño experimental, diseño cuasi experimental y ejemplos de aplicación.\n\n\nEsta sección cuenta con dos capítulos:\n\n\n\n\n\n\n\n\n\n\n\n\n\nEste libro no es un libro de inferencia estadística y no vamos a hablar de tests estadísticos sino en el contexto de una hipótesis científica y de un diseño experimental en particular. Es decir, este libro NO es un manual de estadística. Existen cientos de libros que desarrollan en detalle esos contenidos y para nada este libro pretende cubrir esos contenidos.\nEste libro tampoco es un manual de programación ni de análisis de datos en R. Si bien en la primera sección del libro haremos una presentación de algunas de las funcionalidades de la colección de paquetes para análisis de datos que es el tidyverse, no vamos a repasar ninguna de las bases de R ni de Rstudio. Existen infinidad de recursos invreíbles para aprender esto y sentimos que no hay necesida de, a eso, sumarle uno mediocre.\n\n\n\nPara sacarle el jugo a los contenidos de este libro hace falta tener conocimientos básicos de probabilidad y estadística así como estar familiarizado con la programación en R. Ninguno de estos son obstáculos hoy en día ya que hay cientos de fuentes (libros, cursos, etc.) a las que el lector puede consultar previo o durante la lectura de este libro.\n\n\n\n\n\n\nDON’T PANIC\n\n\n\nEl libro comienza con un breve repaso de conceptos básicos de probabilidad y estadística y presenta los comandos básicos para correr códigos en R.\n\n\n\n\n\n\n\n\nAnte cualquier duda pueden contactarme vía e-mail a ispiousas@udesa.edu.ar.\n\n\n\nEste sitio web es y siempre será gratuito, licencia bajo [CC BY-NC-ND 3.0 License]{https://creativecommons.org/licenses/by-nc-nd/3.0/us/}."
  },
  {
    "objectID": "intro_R.html",
    "href": "intro_R.html",
    "title": "1  R y el tidyverse",
    "section": "",
    "text": "En la gran mayoría de las ejemplos y ejercicios de este libro vamos a usar una computadora (te quiero mucho Skynet ♥️). Con ella nos vamos a comunicar utilizando un lenguaje de programación muy popular en el campo de la estadística: R(R Core Team 2023). Por eso mi recomendación es que lo que primero tenés que hacer es instalar R y RStudio. RStudio es una interfaz muy popular utilizada para, mayormente, programar en R. En el recuadro siguiente van a encontrar información de cómo instalar ambas cosas.\nSi bien la mayoría de las cosas que vamos a ahcer en este libro se pueden hacer con funciones de R base1, la propuesta es utilizar los paquetes y funciones del tidyverse. El tidyverse es una colección de paquetes diseñados para el campo de la ciencia de datos y que comparten una filosofía de diseño subyacente, una gramática y una estructura de datos(Wickham et al. 2019). Tranquilos que en la sección siguiente se va a ir aclarando la cosa."
  },
  {
    "objectID": "intro_stat.html#teoría-básica-de-probabilidad",
    "href": "intro_stat.html#teoría-básica-de-probabilidad",
    "title": "2  Repaso de probabilidad y estadística",
    "section": "2.1 Teoría básica de probabilidad",
    "text": "2.1 Teoría básica de probabilidad"
  },
  {
    "objectID": "intro_stat.html#población-y-muestra",
    "href": "intro_stat.html#población-y-muestra",
    "title": "2  Repaso de probabilidad y estadística",
    "section": "2.2 Población y muestra",
    "text": "2.2 Población y muestra\nAcá usar una versión de la figurita de All of statistics que pone la generación de los datos en el dominio de la probabilidad y la estimación de estos parámetros en el dominio de la estadística. Me parece una forma ideal de empezar a hablar de qué queremos hacer con la estadística."
  },
  {
    "objectID": "intro_stat.html#eventos-y-probabilidad-condicional",
    "href": "intro_stat.html#eventos-y-probabilidad-condicional",
    "title": "2  Repaso de probabilidad y estadística",
    "section": "2.3 Eventos y probabilidad condicional",
    "text": "2.3 Eventos y probabilidad condicional\nAcá agregar lo de árboles y diagramas."
  },
  {
    "objectID": "intro_stat.html#tablas-de-contingencia",
    "href": "intro_stat.html#tablas-de-contingencia",
    "title": "2  Repaso de probabilidad y estadística",
    "section": "2.6 Tablas de contingencia",
    "text": "2.6 Tablas de contingencia"
  },
  {
    "objectID": "intro_stat.html#esperanza",
    "href": "intro_stat.html#esperanza",
    "title": "2  Repaso de probabilidad y estadística",
    "section": "2.7 Esperanza",
    "text": "2.7 Esperanza"
  },
  {
    "objectID": "intro_stat.html#varianza-y-covarianza",
    "href": "intro_stat.html#varianza-y-covarianza",
    "title": "2  Repaso de probabilidad y estadística",
    "section": "2.8 Varianza y covarianza",
    "text": "2.8 Varianza y covarianza\n\n\n\n\nHerzog, Michael H, Gregory Francis, and Aaron Clarke. 2019. Understanding Statistics and Experimental Design: How to Not Lie with Statistics. Springer Nature."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "R Core Team. 2023. R: A Language and Environment for Statistical\nComputing. Vienna, Austria: R Foundation for Statistical Computing.\nhttps://www.R-project.org/.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy\nD’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019.\n“Welcome to the Tidyverse.” Journal of Open Source\nSoftware 4 (43): 1686.\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023.\nR for Data Science. \" O’Reilly Media, Inc.\"."
  },
  {
    "objectID": "intro_R.html#el-tidyverse",
    "href": "intro_R.html#el-tidyverse",
    "title": "1  R y el tidyverse",
    "section": "1.1 El tidyverse",
    "text": "1.1 El tidyverse\n\n1.1.1 Tidy data\nLo primero que tenemos que pe\n\n\n1.1.2 Introducción al Tidyverse\nComo contamos más arriba, el Tidyverse es una colección cerca de 25 paquetes, todos relacionados con la carga, manejo, modificación y visualización de datos. La idea de este libro no es profundizar en todas sus capacidades pero consideramos importante presentar algunas de las funciones que más vamos a utilizar a lo largo del libro. Estas son funciones para leer datos del paquete {readr}, los verbos de {dplyr} para manipularlos, las funciones de {tidyR} para acomodarlos y el poderosísimo {ggplot2} para visualizarlos.\n\n1.1.2.1 Cargando datos con readr\nUna de las cosas que vamos a hacer más a menudo en este libro es cargar algún dataset. Para esto vamos a usar varias de las funcionalidades del paquete {readr}.\nEl caso más simple al que nos vamos a enfrentar es la carga de una base de datos organizada en columnas y separadas por comas en un archivo de extensión .csv. En este caso lo que tenemos que hacer es bastante simple, usar la función read_csv() como a continuación:\n\ndata <- read_csv(\"data/summer.csv\")\n#> Rows: 31165 Columns: 9\n#> ── Column specification ─────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (8): City, Sport, Discipline, Athlete, Country, Gender, Event, Medal\n#> dbl (1): Year\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nsummary(data)\n#>       Year          City              Sport            Discipline       \n#>  Min.   :1896   Length:31165       Length:31165       Length:31165      \n#>  1st Qu.:1948   Class :character   Class :character   Class :character  \n#>  Median :1980   Mode  :character   Mode  :character   Mode  :character  \n#>  Mean   :1970                                                           \n#>  3rd Qu.:2000                                                           \n#>  Max.   :2012                                                           \n#>    Athlete            Country             Gender             Event          \n#>  Length:31165       Length:31165       Length:31165       Length:31165      \n#>  Class :character   Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n#>                                                                             \n#>                                                                             \n#>                                                                             \n#>     Medal          \n#>  Length:31165      \n#>  Class :character  \n#>  Mode  :character  \n#>                    \n#>                    \n#> \n\nDescribir que es un tibble.\n\n\n1.1.2.2 El operador pipe (|>) del paquete magrittr\nEl operador pipe nos permite concatenar funciones que utilizan como entrada los mismos datos. El principio de operación es el siguiente, supongan que nosotros queremos cargar un dataset y aplicarle la función summary. Esto lo podemos hacer simplemente cargando el dataset en una lìnea de código y ejecutanco la función summary() en la siguiente.\n\ndata <- read_csv(\"data/summer.csv\")\n#> Rows: 31165 Columns: 9\n#> ── Column specification ─────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (8): City, Sport, Discipline, Athlete, Country, Gender, Event, Medal\n#> dbl (1): Year\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nsummary(data)\n#>       Year          City              Sport            Discipline       \n#>  Min.   :1896   Length:31165       Length:31165       Length:31165      \n#>  1st Qu.:1948   Class :character   Class :character   Class :character  \n#>  Median :1980   Mode  :character   Mode  :character   Mode  :character  \n#>  Mean   :1970                                                           \n#>  3rd Qu.:2000                                                           \n#>  Max.   :2012                                                           \n#>    Athlete            Country             Gender             Event          \n#>  Length:31165       Length:31165       Length:31165       Length:31165      \n#>  Class :character   Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n#>                                                                             \n#>                                                                             \n#>                                                                             \n#>     Medal          \n#>  Length:31165      \n#>  Class :character  \n#>  Mode  :character  \n#>                    \n#>                    \n#> \n\nPero, también podemos aprovechar el operador pipe y hacer todo en una única línea de código.\n\nread_csv(\"data/summer.csv\") |> summary()\n#> Rows: 31165 Columns: 9\n#> ── Column specification ─────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (8): City, Sport, Discipline, Athlete, Country, Gender, Event, Medal\n#> dbl (1): Year\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#>       Year          City              Sport            Discipline       \n#>  Min.   :1896   Length:31165       Length:31165       Length:31165      \n#>  1st Qu.:1948   Class :character   Class :character   Class :character  \n#>  Median :1980   Mode  :character   Mode  :character   Mode  :character  \n#>  Mean   :1970                                                           \n#>  3rd Qu.:2000                                                           \n#>  Max.   :2012                                                           \n#>    Athlete            Country             Gender             Event          \n#>  Length:31165       Length:31165       Length:31165       Length:31165      \n#>  Class :character   Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n#>                                                                             \n#>                                                                             \n#>                                                                             \n#>     Medal          \n#>  Length:31165      \n#>  Class :character  \n#>  Mode  :character  \n#>                    \n#>                    \n#> \n\nAl dejar vacío el paréntesis de la función summary(), la misma va a tomar como variable de entrada a la que está antes del operador pipe, es decir, a la que antes llamamos data. En el caso que la función summary() tuviera más de una variable de entrada, lo que viene antes del pipe tomaría el lugar de la primera de ellas.\nSi bien esta funcionalidad parece algo que complica las cosas y que no trae demasiados beneficios con un ejemplo tan simple, más adelante veremos que puede ser de gran utilidad, ayudando a disminuir la cantidad de línes de código y de variables intermedias.\n\n\n1.1.2.3 Dplyr y sus verbos\nUna de las cosas más útiles del Tidyverse para el tipo de procesamiento de datos que vamos a llevar a cabo en este libro son los verbos de dplyr. Estas funciones no permiten agregar columnas, resumir la información, filtrar filas, seleccionar columnas, etc. Y todas estas acciones las podemos hacer en la base de datos completa o en una parte de ella agrupada de acuerdo a algún criterio. Vayamos de a poco.\nhttps://dplyr.tidyverse.org/\n\n\n1.1.2.4 TidyR, el paquete para ordenar tus datos\n\n\n1.1.2.5 ggplot2 o cómo hacer figuras que sean la envidia de tu compañero de escritorio"
  },
  {
    "objectID": "intro_R.html#cierre",
    "href": "intro_R.html#cierre",
    "title": "1  R y el tidyverse",
    "section": "1.2 Cierre",
    "text": "1.2 Cierre\nComo vimos brevemente en este capítulo, los paquetes del tidyverse son una herramineta importantísima para el análisis de datos utilizando R. Para más detalles sobre estas funcionalidades les recomendamos la guía de Hadley Wickham(Wickham et al. 2019) o, si ya se quieren sumergir de lleno en el mundo del análisis de datos con R, este fantástico libro [Wickham, Çetinkaya-Rundel, and Grolemund (2023)]2. Es decir, sin tener que cargar ningún paquete de funciones adicional..\n\n\n\n\nR Core Team. 2023. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the Tidyverse.” Journal of Open Source Software 4 (43): 1686.\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023. R for Data Science. \" O’Reilly Media, Inc.\"."
  },
  {
    "objectID": "intro_stat.html#probabilidad-total",
    "href": "intro_stat.html#probabilidad-total",
    "title": "2  Repaso de probabilidad y estadística",
    "section": "2.4 Probabilidad total",
    "text": "2.4 Probabilidad total"
  },
  {
    "objectID": "intro_stat.html#teorema-de-bayes",
    "href": "intro_stat.html#teorema-de-bayes",
    "title": "2  Repaso de probabilidad y estadística",
    "section": "2.5 Teorema de Bayes",
    "text": "2.5 Teorema de Bayes\nAhora que ya llegamos a la fórmula de Bayes a partir de las definiciones de probabilidad total podemos tomar prestado un ejemplo de (Herzog, Francis, and Clarke 2019): Tenemos un test para identificar la XXX de un virus (llamémoslo IKV). Este test tiene una sensibilidad de 99.99% y una especificidad de 99.99%. Es decir, la probabilidad de que el test de positivo, dado que tenemos el virus (\\(P(T^+|IKV)\\)) es de 0.9999, y lo mismo ocurre para la probabilidad de que el test de negativo en caso de que NO tengamos el virus (\\(P(T^-|\\neg IKV)\\)). Sabemos también que la incidencia del virus IKV es de 1 en 10000.\nSupongamos que somos elegidos aleatoriamente para realizarnos el test y este da positivo ¿Qué probabilidad de ser portadores del virus tenemos (\\(P(IKV|T^+)\\))? La primera respuesta que se nos viene es 0.9999 ¿Verdad? Pero, si estuvimos prestando atención, ya a esta altura debemos saber que para invertir la condicionalidad de una probabilidad tenemos que acudir al bueno de Bayes. O sea:\n\\[\nP(IKV|T^+) = \\frac{P(T^+|IKV) \\times P(IKV)}{P(T+)}\n\\]\ndonde \\(P(T^+|IKV) = 0.9999\\) y \\(P(IKV) = 1/10000 = 0.0001\\). Además, echando mano a la definición de probabilidad total podemos calcular \\(P(T+)\\) como:\n\\[\nP(T+) = P(T^+|IKV) \\times P(IKV) + P(T^+|\\neg IKV) \\times P(\\neg IKV)\n\\]\ndonde \\(P(T^+|\\neg IKV) = 1-0.9999\\) y \\(P(\\neg IKV) = 1-0.0001\\). Reemplazando todos los valores tenemos que:\n\\[\n\\begin{array}\n_P(IKV|T^+) &=& \\frac{P(T^+|IKV) \\times P(IKV)}{P(T+)}\\\\\n&=& \\frac{P(T^+|IKV) \\times P(IKV)}{P(T^+|IKV) \\times P(IKV) + P(T^+|\\neg IKV) \\times P(\\neg IKV)} \\\\\n&=& \\frac{0.9999 \\times 0.0001}{0.9999 \\times 0.0001 + (1-0.9999) \\times (1-0.0001)} \\\\\n&=& \\frac{0.9999 \\times 0.0001}{0.9999 \\times 0.0001 + 0.0001 \\times 0.9999} \\\\\n&=& 0.5\n\\end{array}\n\\]\n¿Qué? ¿Esto significa que si el test me da positivo solo tengo un 0.5 de probabilidad de tener el virus? ¿Esto quiere decir que los tests no sirven para nada? Momento, analicemos un poco al resultado al que llegamos. Lo que nos dice esta cuenta es que, una vez que el test nos da positivo, a pesar de lo sensible del test y por lo “raro” de la portación del virus, nuestra probabilidad de ser portadores es de 0.5. Pero, ¿Y nuestra probabilidad de ser portadores si el test nos da negativos? Hagamos la cuenta:\n\\[\n\\begin{array}\n_P(IKV|T^-) &=& \\frac{P(T^-|IKV) \\times P(IKV)}{P(T-)}\\\\\n&=& \\frac{P(T^-|IKV) \\times P(IKV)}{P(T^-|IKV) \\times P(IKV) + P(T^-|\\neg IKV) \\times P(\\neg IKV)} \\\\\n&=& \\frac{(1-0.9999) \\times 0.0001}{(1 - 0.9999) \\times 0.0001 + (0.9999) \\times (1-0.0001)} \\\\\n&=& 1E-8\n\\end{array}\n\\]\nOK, ahora la cosa tiene más sentido. O sea, el test es bastante bueno para decirnos cuando no somos portadores y dando negativo, el problema es cuando da positivo. En este caso tenemos que preocuparnos, pero, como vimos anteriormente, la probabilidad de ser portadores es de apenas 0.5.\nHay una solución más simple para esto y es la que deben estar pensando ustedes: ¿Y si me hacen un segundo test? ¡BINGO! Calculemos rápidamente la probabilidad de estar infectados si nos testean por segunda vez:\n\\[\nP(IKV|T^{2+}) = \\frac{0.9999^2 \\times 0.0001}{0.9999^2 \\times 0.0001 + 0.0001^2 \\times 0.9999} = 0.9999\n\\] Ahora sí, si somos testeados por segunda vez, la probabilidad de ser portadores dado que tenemos dos resultados positivos trepa a 0.9999. Nos podemos quedar tranquilos.\nPara cerrar, me gustaría que pensemos un poco en una palabra MUY importante que se dijo en el enunciado del problema: Aleatoriamente. En muchos de los casos en los que nos testeamos para ver si somos portadores de un virus, lo hacemos porque tenemos algún tipo de presunción de que podemos serlo (por ejemplo, tenemos síntomas). ¿Cuál creen que sería la probabilidad que se modifica en la fórmula? Exacto, \\(P(IKV)\\), ya que sería más bien \\(P(IKV|síntomas)\\)."
  }
]