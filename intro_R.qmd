# R y el tidyverse {#sec-intro_R}

```{r}
#| echo: false

source("_common.R")
```

En la gran mayoría de las ejemplos y ejercicios de este libro vamos a usar una computadora (te quiero mucho Skynet ♥️). Con ella nos vamos a comunicar utilizando un lenguaje de programación muy popular en el campo de la estadística: R[@R2023]. Por eso mi recomendación es que lo que primero tenés que hacer es instalar R y RStudio. RStudio es una interfaz **muy** popular utilizada para, mayormente, programar en R. En el recuadro siguiente van a encontrar información de cómo instalar ambas cosas.

::: callout-tip
## Instalación de R y RStudio

Lo primero que hay que hacer para poder correr scripts de R es, como resulta evidente, instalar R. Lo pueden hacer seleccionando su sistema operativo en este [link](http://mirror.fcaglp.unlp.edu.ar/CRAN/) y siguiendo los pasos de la instalación.

Pueden bajar la versión gratuita de RStudio del siguiente [link](https://www.rstudio.com/products/rstudio/download/#download). En caso de que el link no haya detectado correctamente el sistema operativo, en la sección *All Installers* pueden seleccionarlo manualmente. Una vez descargado el instalador sólo hay que seguir los pasos de la intalación.
:::

Si bien la mayoría de las cosas que vamos a ahcer en este libro se pueden hacer con funciones de R base[^intro_r-1], la propuesta es utilizar los paquetes y funciones del *Tidyverse*. El *Tidyverse* es una colección de paquetes diseñados para el campo de la ciencia de datos y que comparten una filosofía de diseño subyacente, una gramática y una estructura de datos[@wickham2019welcome]. Tranquilos que en la sección siguiente se va a ir aclarando la cosa.

[^intro_r-1]: Es decir, sin tener que cargar ningún paquete de funciones adicional.

### Tidy data

Lo primero que tenemos que pe

### Introducción al Tidyverse

Como contamos más arriba, el Tidyverse es una colección cerca de 25 paquetes, todos relacionados con la carga, manejo, modificación y visualización de datos. La idea de este libro no es profundizar en todas sus capacidades[^intro_r-2] pero consideramos importante presentar algunas de las funciones que más vamos a utilizar a lo largo del libro. Estas son funciones para leer datos del paquete *{readr}*, los verbos de *{dplyr}* para manipularlos, las funciones de *{tidyR}* para acomodarlos y el poderosísimo *{ggplot2}* para visualizarlos.

[^intro_r-2]: Si quieren profundizar puede ir a ver este fantástico libro [@wickham2023r].

#### Cargando datos con *readr*

Una de las cosas que vamos a hacer más a menudo en este libro es cargar algún dataset. Para esto vamos a usar varias de las funcionalidades del paquete *{readr}*.

El caso más simple al que nos vamos a enfrentar es la carga de una base de datos organizada en columnas y separadas por comas en un archivo de extensión *.csv*. En este caso lo que tenemos que hacer es bastante simple, usar la función *read_csv()* como a continuación:

```{r}
read_csv("data/summer.csv")
```

Describir que es un tibble.

#### El operador *pipe* (\|\>) del paquete ***magrittr***

El operador pipe nos permite concatenar funciones que utilizan como entrada los mismos datos. El principio de operación es el siguiente, supongan que nosotros queremos cargar un dataset y aplicarle la función summary. Esto lo podemos hacer simplemente cargando el dataset en una lìnea de código y ejecutanco la función summary() en la siguiente.

```{r}
data <- read_csv("data/summer.csv")
summary(data)
```

Pero, también podemos aprovechar el operador pipe y hacer todo en una única línea de código.

```{r}
read_csv("data/summer.csv") |> summary()
```

Al dejar vacío el paréntesis de la función summary(), la misma va a tomar como variable de entrada a la que está antes del operador pipe, es decir, a la que antes llamamos `data`. En el caso que la función summary() tuviera más de una variable de entrada, lo que viene antes del *pipe* tomaría el lugar de la primera de ellas.

Si bien esta funcionalidad parece algo que complica las cosas y que no trae demasiados beneficios con un ejemplo tan simple, más adelante veremos que puede ser de gran utilidad, ayudando a disminuir la cantidad de línes de código y de variables intermedias.

#### *Dplyr* y sus verbos

Una de las cosas más útiles del Tidyverse para el tipo de procesamiento de datos que vamos a llevar a cabo en este libro son los verbos de dplyr. Estas funciones no permiten agregar columnas, resumir la información, filtrar filas, seleccionar columnas, etc. Y todas estas acciones las podemos hacer en la base de datos completa o en una parte de ella agrupada de acuerdo a algún criterio. Vayamos de a poco.

https://dplyr.tidyverse.org/

#### TidyR, el paquete para ordenar tus datos

#### ggplot2 o cómo hacer figuras que sean la envidia de tu compañero de escritorio
